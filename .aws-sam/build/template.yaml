AWSTemplateFormatVersion: 2010-09-09
Description: todos
Transform:
- AWS::Serverless-2016-10-31
Globals:
  Api:
    Cors:
      AllowMethods: '''*'''
      AllowHeaders: '''*'''
      AllowOrigin: '''*'''
Resources:
  getAllTodosFunctionToTableConnector:
    Type: AWS::Serverless::Connector
    Properties:
      Source:
        Id: getAllTodosFunction
      Destination:
        Id: SampleTable
      Permissions:
      - Read
  createTodoFunctionToTableConnector:
    Type: AWS::Serverless::Connector
    Properties:
      Source:
        Id: createTodoFunction
      Destination:
        Id: SampleTable
      Permissions:
      - Write
  updateTodoFunctionToTableConnector:
    Type: AWS::Serverless::Connector
    Properties:
      Source:
        Id: updateTodoFunction
      Destination:
        Id: SampleTable
      Permissions:
      - Write
  getByIdFunctionToTableConnector:
    Type: AWS::Serverless::Connector
    Properties:
      Source:
        Id: getByIdFunction
      Destination:
        Id: SampleTable
      Permissions:
      - Read
  deleteTodoFunctionToTableConnector:
    Type: AWS::Serverless::Connector
    Properties:
      Source:
        Id: deleteTodoFunction
      Destination:
        Id: SampleTable
      Permissions:
      - Write
  getAllTodosFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-all-todos.getAllTodosHandler
      Runtime: nodejs16.x
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all items from
        a DynamoDB table.
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: GET
      CodeUri: getAllTodosFunction
    Metadata:
      SamResourceId: getAllTodosFunction
  createTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/create-todo.createTodoHandler
      Runtime: nodejs16.x
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP post method to add one item to
        a DynamoDB table.
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: POST
      CodeUri: createTodoFunction
    Metadata:
      SamResourceId: createTodoFunction
  updateTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/update-todo.updateTodoHandler
      Runtime: nodejs16.x
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP put method to update one item
        to a DynamoDB table.
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{id}
            Method: PUT
      CodeUri: updateTodoFunction
    Metadata:
      SamResourceId: updateTodoFunction
  getByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-by-id.getByIdHandler
      Runtime: nodejs16.x
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get one item by
        id from a DynamoDB table.
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{id}
            Method: GET
      CodeUri: getByIdFunction
    Metadata:
      SamResourceId: getByIdFunction
  deleteTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/delete-todo.deleteTodoHandler
      Runtime: nodejs16.x
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to delete one item
        by id from a DynamoDB table.
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{id}
            Method: DELETE
      CodeUri: deleteTodoFunction
    Metadata:
      SamResourceId: deleteTodoFunction
  SampleTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
